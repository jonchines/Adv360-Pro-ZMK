/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#include "keypos_adv360.h"

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"

        hm: homerow-mods {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };

        hml: homerow-mods-left {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Left";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <POS_LH_ALPHA>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
        
        hmr: homerow-mods-right {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mods Right";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <POS_RH_ALPHA>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
        
        tm: thumbrow-mod {
            compatible = "zmk,behavior-hold-tap";
            label = "Thumbrow Mods";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };

        dsc: dance-shift-caps {
            compatible = "zmk,behavior-tap-dance";
            label = "Dance Shift Caps";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo-we-q {
            bindings = <&kp Q>;
            key-positions = <16 17>;
        };

        combo-io-p {
            bindings = <&kp P>;
            key-positions = <24 25>;
        };

        combo-cv-b {
            bindings = <&kp B>;
            key-positions = <49 50>;
            layers = <0>;
        };

        combo-m,-n {
            bindings = <&kp N>;
            key-positions = <55 56>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1           &kp N2           &kp N3               &kp N4              &kp N5  &none                                                       &mo 3      &kp N6  &kp N7              &kp N8                &kp N9            &kp N0              &kp MINUS
&kp TAB    &kp Q            &kp W            &kp E                &kp R               &kp T   &none                                                       &none      &kp Y   &kp U               &kp I                 &kp O             &kp P               &kp BSLH
&kp ESC    &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F   &kp G   &kp LBKT    &kp DEL    &none          &none      &kp RCTRL  &kp RBKT   &kp H   &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr LEFT_GUI SEMI  &kp SQT
&dsc       &kp Z            &kp X            &kp C                &kp V               &kp B                          &kp PG_UP      &kp PG_DN                        &kp N   &kp M               &kp COMMA             &kp DOT           &kp FSLH            &kp RIGHT_SHIFT
&mo 2      &none            &kp LALT         &kp LG(LC(LEFT))     &kp LG(LC(RIGHT))           &tm 4 BSPC  &tm 1 TAB  &kp HOME       &kp END    &kp ENTER  &kp SPACE          &kp GRAVE           &none                 &none             &none               &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&none      &none         &none     &none      &none       &none   &none                                                   &mo 3      &none  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &none
&trans     &none         &none     &none      &none       &none   &none                                                   &none      &none  &kp N7      &kp N8        &kp N9         &kp KP_MINUS     &none
&trans     &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &kp G   &none     &trans    &trans          &trans    &trans    &none      &none  &kp N4      &kp N5        &kp N6         &kp KP_PLUS      &none
&trans     &none         &none     &none      &none       &none                       &trans          &trans                         &none  &kp N1      &kp N2        &kp N3         &kp KP_ENTER     &trans
&mo 2      &none         &none     &trans     &trans              &trans    &trans    &trans          &trans    &trans    &trans            &kp N0      &none         &kp KP_DOT     &none            &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer-nav {
            bindings = <
&none  &none         &none         &none             &none           &none  &none                                         &none    &none     &none          &none        &none      &none     &none
&none  &none         &none         &none             &none           &none  &none                                         &none    &none     &none          &none        &none      &none     &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none  &none  &none  &none      &none      &none     &none    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp CAPS  &none
&none  &none         &none         &none             &none           &none                &none      &none                         &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp INS   &none
&none  &none         &none         &none             &none                  &none  &none  &none      &kp ENTER  &kp BSPC  &kp DEL            &none          &none        &none      &none     &none
            >;
        };
    };
};
